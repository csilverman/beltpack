
/*	UTILITIES
	=========
	
	These provide useful functions for writing your own mixins. They're also used by mixins elsewhere in this file, so they should come first.
*/
	
/*
	As far as I can tell, there doesn't seem to be a function to get a key-value pair from a map based on index number. This might be clumsy, but it works: iterate across the map, incrementing a counter, until the counter matches the specified index, at which point you return the value.

*/
@function get-map-value-by-index($map, $index) {
  $i: 0;
  @each $key, $value in $map {
    $i: $i + 1;
    @if $i == $index {
      @return $value;
    }
  }
}


// =============================================================================
// String Replace - https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}


$breakpoints: (
	"small": 30em,
	"medium": 50em,
	"large": 70em
);


//	Issue: set it so it can handle if someone adds a fourth breakpoint parameter but there are only three breakpoints

@mixin prop($property, $values...) {
  $i: 0;
  @each $value in $values {
    $i: $i+1;
    @media screen and (min-width: get-map-value-by-index($breakpoints, $i)) {
      #{$property}: $value;
    }
  }
}



.sans-serif {
	&-small {
		@include prop("font-size", 1em, 1.4em, 6em);		
	}
	&-medium {
		@include prop("font-size", 1.1em, 1.8em, 7em);		
	}
}



/*	TYPOGRAPHIC
	===========
*/

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $directory: null, $weight: null, $style: null, $exts: otf woff2 woff) {
	$src: null;
  $path: '';
  
	@if $directory {
 	$path: "../fonts/" + $directory + '/' + $name + "/";
	}
	@else {
	$path: "../fonts/" + $name + "/";
	}

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + $name + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}


















